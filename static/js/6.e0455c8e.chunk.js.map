{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","item","active","src","alt","to","name","Message","messages","message","DialogReduxTextarea","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredFields","Dialogs","itemsElements","dialogs","map","i","idx","messagesElements","m","isAuth","dialogsItems","dialogsMessages","values","sendMessage","dialogTextarea","DialogsAPIComponent","this","isFetching","Preloader","React","Component","compose","connect","state","dialogsReducer","newMessageText","authReducer"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,gBAAkB,iCAAiC,KAAO,sBAAsB,OAAS,0B,6HCY5KC,EAVI,SAACC,GAClB,IAAIC,EAAO,YAAYD,EAAME,GAC7B,OACE,sBAAKC,UAAS,UAAKC,IAAEC,KAAP,YAAeD,IAAEE,QAA/B,UACE,qBAAKC,IAAI,+EAA+EC,IAAI,WAC5F,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,WCCjBC,EANC,SAACX,GACf,OACE,qBAAKG,UAAWC,IAAEQ,SAAlB,SAA6BZ,EAAMa,W,yDCsBjCC,EAAsBC,YAAU,CAAEC,KAAM,kBAAlBD,EAjBL,SAACf,GACtB,OACE,uBAAMiB,SAAUjB,EAAMkB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,YAAa,kBACbZ,KAAM,iBACNa,SAAU,CAACC,SAGf,8BACE,kDAkCOC,EAzBC,SAACzB,GACf,IAAI0B,EAAgB1B,EAAM2B,QAAQC,KAAI,SAACC,EAAGC,GACxC,OAAO,cAAC,EAAD,CAAsBpB,KAAMmB,EAAEnB,KAAMR,GAAI2B,EAAE3B,IAAzB4B,MAEtBC,EAAmB/B,EAAMY,SAASgB,KAAI,SAACI,EAAGF,GAC5C,OAAO,cAAC,EAAD,CAAmBjB,QAASmB,EAAEnB,SAAhBiB,MAOvB,OAAK9B,EAAMiC,OAIT,sBAAK9B,UAAWC,IAAEuB,QAAlB,UACE,qBAAKxB,UAAWC,IAAE8B,aAAlB,SAAiCR,IACjC,sBAAKvB,UAAWC,IAAE+B,gBAAlB,UACGJ,EACD,cAACjB,EAAD,CAAqBG,SAZP,SAACmB,GACnBpC,EAAMqC,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,YAGjB,cAAC,IAAD,CAAU7B,GAAI,Y,wBCpCnB8B,E,4JACJ,WACI,OAAO,gCACJC,KAAKxC,MAAMyC,WAAa,cAACC,EAAA,EAAD,IAAgB,KACzC,cAAC,EAAD,eAAaF,KAAKxC,e,GAJQ2C,IAAMC,WA6BzBC,sBAAQC,aATD,SAACC,GACrB,MAAO,CACLnC,SAAUmC,EAAMC,eAAepC,SAC/Be,QAASoB,EAAMC,eAAerB,QAC9BsB,eAAgBF,EAAMC,eAAeC,eACrChB,OAAOc,EAAMG,YAAYjB,UAK7B,CACEI,kBAFaQ,CAIZN","file":"static/js/6.e0455c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3mPLv\",\"dialogsItems\":\"Dialogs_dialogsItems__1A4aW\",\"dialogsMessages\":\"Dialogs_dialogsMessages__GY72c\",\"item\":\"Dialogs_item__2sISh\",\"active\":\"Dialogs_active__2OWTk\"};","import s from '../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/'+props.id;\r\n  return (\r\n    <div className={`${s.item} ${s.active}`}>\r\n      <img src=\"https://i.pinimg.com/originals/51/4d/fb/514dfbc6b06dd135947f835cfb70377d.jpg\" alt=\"katara\" />\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem","import s from '../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.messages}>{props.message}</div>\r\n  )\r\n}\r\n\r\nexport default Message","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\r\nimport { requiredFields } from \"../../utils/validators/validator\";\r\n\r\nconst DialogTextarea = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          placeholder={\"write something\"}\r\n          name={\"dialogTextarea\"}\r\n          validate={[requiredFields]}\r\n        ></Field>\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst DialogReduxTextarea = reduxForm({ form: \"dialogTextarea\" })(\r\n  DialogTextarea\r\n);\r\n\r\nconst Dialogs = (props) => {\r\n  let itemsElements = props.dialogs.map((i, idx) => {\r\n    return <DialogItem key={idx} name={i.name} id={i.id} />;\r\n  });\r\n  let messagesElements = props.messages.map((m, idx) => {\r\n    return <Message key={idx} message={m.message} />;\r\n  });\r\n\r\n  let onSendMessage = (values) => {\r\n    props.sendMessage(values.dialogTextarea);\r\n    values.dialogTextarea = \"\";\r\n  };\r\n  if (!props.isAuth) {\r\n    return <Redirect to={\"/login\"} />;\r\n  }\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{itemsElements}</div>\r\n      <div className={s.dialogsMessages}>\r\n        {messagesElements}\r\n        <DialogReduxTextarea onSubmit={onSendMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","import { sendMessage} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass DialogsAPIComponent extends React.Component {\r\n  render() {\r\n      return <div>\r\n        {this.props.isFetching ? <Preloader /> : null}\r\n        <Dialogs {...this.props}/>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\n//let AuthRedirectComponent = withAuthRedirect(DialogsAPIComponent)\r\n\r\n\r\n\r\n// const DialogsContainer = connect(mapStateToProps,\r\n//  {\r\n//    sendMessage,\r\n//    updateNewMessageText\r\n//   })(AuthRedirectComponent);\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messages: state.dialogsReducer.messages,\r\n    dialogs: state.dialogsReducer.dialogs,\r\n    newMessageText: state.dialogsReducer.newMessageText,\r\n    isAuth:state.authReducer.isAuth\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,\r\n{\r\n  sendMessage,\r\n}),\r\n )(DialogsAPIComponent);\r\n\r\n"],"sourceRoot":""}